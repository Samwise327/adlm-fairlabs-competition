---
title: "adlm_competition"
format: html
editor: visual
---

## Data Cleanup

```{r}
##To clean the R environment 
rm(list=ls())

##read libraries
library(tidyverse)
library(dplyr)
library(ggplot2)
library(ggpubr)
library(lubridate)
library(data.table)
library(broom)
library(shiny)
library(DT)
library(bslib)
library(nnet)
library(shinydashboard)
library(shinythemes)

# Read in data in appropriate formats 
fairlabs_data <- read_csv("fairlabs_data.csv")
fairlabs_data$delivery_date <- as.Date(fairlabs_data$delivery_date)
fairlabs_data$maternal_race <- gsub("\n", " ", fairlabs_data$maternal_race)

# Clean testing data
# The first test w an indication is 2028-02-27 & delivery 2-26
fairlabs_data <- fairlabs_data %>%
  filter(maternal_age != 123) %>%
  mutate(delivery_week = floor_date(delivery_date, unit = "week"),
         delivery_month = floor_date(delivery_date, unit = "month"),
         BA_intervention = ifelse(delivery_date >= "2028-02-26","After","Before"),
         tested = ifelse(is.na(uds_order_id),"Not Tested","Tested"),
         reported = ifelse(!is.na(cps_reporting_date),"Reported","Not Reported"),
         tested10 = as.double(ifelse(is.na(uds_order_id),0,1)),
         reported10 = as.double(ifelse(is.na(cps_reporting_date),0,1)),
         order_indication = ifelse(is.na(order_indication), "No indication provided",order_indication),
         detected_phenobarbital = ifelse(detected_phenobarbital == 2, 1, detected_phenobarbital), 
         tested_pos = ifelse(rowSums(select(.,starts_with("detected_"))) == 0,0,1),
         tested_pos_wo_mj = ifelse(rowSums(select(., starts_with("detected_"), -starts_with("detected_tetrahydrocannabinol"))) == 0,0,1), 
         maternal_decade = ifelse(floor(maternal_age/10)*10 == 10, "10-20 years old", NA),
         maternal_decade = ifelse(floor(maternal_age/10)*10 == 20, "20-30 years old", maternal_decade),
         maternal_decade = ifelse(floor(maternal_age/10)*10 == 30, "30-40 years old", maternal_decade),
         maternal_decade = ifelse(floor(maternal_age/10)*10 == 40, "40-50 years old", maternal_decade))


# Clean race data
# Adding categories : Multiracial/Other, Not Indicated 
fairlabs_data <- fairlabs_data %>%
  mutate(maternal_race = ifelse(maternal_race == "American Indian or Alaska Native Black or African American", "Multiracial/Other", maternal_race)) %>%
  mutate(maternal_race = ifelse(maternal_race == "American Indian or Alaska Native Black or African American White", "Multiracial/Other", maternal_race)) %>%
  mutate(maternal_race = ifelse(maternal_race == "American Indian or Alaska Native White", "Multiracial/Other", maternal_race)) %>%
  mutate(maternal_race = ifelse(maternal_race == "Asian Black or African American", "Multiracial/Other", maternal_race)) %>%
  mutate(maternal_race = ifelse(maternal_race == "Asian White", "Multiracial/Other", maternal_race)) %>%
  mutate(maternal_race = ifelse(maternal_race == "Black or African American Other", "Multiracial/Other", maternal_race)) %>%
  mutate(maternal_race = ifelse(maternal_race == "Black or African American Other Pacific Islander", "Multiracial/Other", maternal_race)) %>%
  mutate(maternal_race = ifelse(maternal_race == "Black or African American Unknown White", "Multiracial/Other", maternal_race)) %>%
  mutate(maternal_race = ifelse(maternal_race == "Black or African American White", "Multiracial/Other", maternal_race)) %>%
  mutate(maternal_race = ifelse(maternal_race == "Other", "Multiracial/Other", maternal_race)) %>%
  mutate(maternal_race = ifelse(maternal_race == "Other Other Pacific Islander White", "Multiracial/Other", maternal_race)) %>%
  mutate(maternal_race = ifelse(maternal_race == "Other Unknown", "Multiracial/Other", maternal_race)) %>%
  mutate(maternal_race = ifelse(maternal_race == "Other Pacific Islander White", "Multiracial/Other", maternal_race)) %>%
  mutate(maternal_race = ifelse(maternal_race == "Asian Declined", "Asian", maternal_race)) %>%
  mutate(maternal_race = ifelse(maternal_race == "Asian Unable to Answer", "Asian", maternal_race)) %>%
  mutate(maternal_race = ifelse(maternal_race == "Black or African American Unable to Answer", "Black or African American", maternal_race)) %>%
  mutate(maternal_race = ifelse(maternal_race == "Black or African American Unknown", "Black or African American", maternal_race)) %>%
  mutate(maternal_race = ifelse(maternal_race == "Other White", "White", maternal_race)) %>%
  mutate(maternal_race = ifelse(maternal_race == "Declined White", "White", maternal_race)) %>%
  mutate(maternal_race = ifelse(maternal_race == "Unable to Answer White", "White", maternal_race)) %>%
  mutate(maternal_race = ifelse(maternal_race == "Unknown White", "White", maternal_race)) %>%
  mutate(maternal_race = ifelse(maternal_race == "Other Unknown White", "White", maternal_race)) %>%
  mutate(maternal_race = ifelse(maternal_race == "Declined", "Not Indicated", maternal_race)) %>%
  mutate(maternal_race = ifelse(maternal_race == "Declined Unable to Answer", "Not Indicated", maternal_race)) %>%
  mutate(maternal_race = ifelse(maternal_race == "Declined Unknown", "Not Indicated", maternal_race)) %>%
  mutate(maternal_race = ifelse(maternal_race == "Unable to Answer", "Not Indicated", maternal_race)) 

# One hot encoding 
fairlabs_data <- fairlabs_data %>%
  mutate(white_yn = ifelse(maternal_race == "White",1,0), 
         black_yn = ifelse(maternal_race == "Black or African American",1,0), 
         asian_yn = ifelse(maternal_race == "Asian",1,0), 
         pi_yn = ifelse(maternal_race == "Other Pacific Islander",1,0),
         native_yn= ifelse(maternal_race =="American Indian or Alaska Native",1,0),
         other_yn = ifelse(maternal_race == "Multiracial/Other",1,0),
         ni_yn = ifelse(maternal_race == "Not Indicated",1,0),
         cps_w_pos = ifelse(reported10 == 1 & tested_pos == 1,1,0), 
         cps_w_pos_wo_mj = ifelse(reported10 == 1 & tested_pos_wo_mj==1,1,0))
  #mutate(maternal_decade = )

  

fairlabs_data$white_yn <- as.factor(fairlabs_data$white_yn)
fairlabs_data$black_yn <- as.factor(fairlabs_data$black_yn)
fairlabs_data$asian_yn <- as.factor(fairlabs_data$asian_yn)
fairlabs_data$pi_yn <- as.factor(fairlabs_data$pi_yn)
fairlabs_data$native_yn <- as.factor(fairlabs_data$native_yn)
fairlabs_data$other_yn <- as.factor(fairlabs_data$other_yn)
fairlabs_data$ni_yn <- as.factor(fairlabs_data$ni_yn)
fairlabs_data$tested <- as.factor(fairlabs_data$tested)
fairlabs_data$reported <- as.factor(fairlabs_data$reported)
fairlabs_data$tested_pos <- as.factor(fairlabs_data$tested_pos)
fairlabs_data$tested_pos_wo_mj <- as.factor(fairlabs_data$tested_pos_wo_mj)
fairlabs_data$cps_w_pos <- as.factor(fairlabs_data$cps_w_pos)
fairlabs_data$cps_w_pos_wo_mj <- as.factor(fairlabs_data$cps_w_pos_wo_mj)
fairlabs_data$order_indication <- as.factor(fairlabs_data$order_indication)

fairlabs_data_tested <- fairlabs_data %>%
  filter(tested10 == 1)

#write.csv(fairlabs_data, "erin_preprocess.csv")

fairlabs_data_before <- fairlabs_data %>%
  filter(BA_intervention == "Before")

fairlabs_data_tested_before <- fairlabs_data_tested %>%
  filter(BA_intervention == "Before")

fairlabs_data_after <- fairlabs_data %>%
  filter(BA_intervention == "After")

fairlabs_data_tested_after <- fairlabs_data_tested %>%
  filter(BA_intervention == "After")

#summaryBT <- fairlabs_data_tested_before %>%
#  group_by(maternal_race) %>%
#  summarize(cnt = length(maternal_race))

#summaryAT <- fairlabs_data_tested_after %>%
#  group_by(maternal_race) %>%
#  summarize(cnt = length(maternal_race))



```

## ML BEFORE / AFTER INTERVENTION

```{r}

#######################
        #tested
#######################

#only between 0-1 as factor (glm is categorical?)
m.glm_tested_before <- glm(tested ~ maternal_age + black_yn + white_yn + asian_yn + pi_yn + native_yn + other_yn + ni_yn, data=fairlabs_data_before, na.action = "na.exclude", family = binomial)
summary(m.glm_tested_before)

m.glm_tested_after <- glm(tested ~ maternal_age + black_yn + white_yn + asian_yn + pi_yn + native_yn + ni_yn + other_yn, data=fairlabs_data_after, na.action = "na.exclude", family = binomial)
summary(m.glm_tested_after)


# everything below here is using the dataset of only those tested ; 
# there were no "other_yn" tested before intervention (removed from glm)
# no "asian_yn" or "ni_yn" tested after intervention (removed from glm)


#######################
        #pos 
#######################

m.glm_pos_before <- glm(tested_pos ~ maternal_age + black_yn + white_yn + asian_yn + pi_yn + native_yn + ni_yn, data= fairlabs_data_tested_before, na.action = "na.exclude", family = binomial)
summary(m.glm_pos_before)

m.glm_pos_after <- glm(tested_pos ~ maternal_age + black_yn + white_yn + pi_yn + native_yn + other_yn, data= fairlabs_data_tested_after, family = binomial)
summary(m.glm_pos_after)


# native and PI both only have 1 person in tested and both were positive w/o mj which is why they have the same coef?
a<- fairlabs_data_tested_after %>%
  filter(maternal_race == "American Indian or Alaska Native" | maternal_race == "Other Pacific Islander" | maternal_race == "Multiracial/Other")


#######################
        #pos w/o mj 
#######################

m.glm_pos_wo_mj_before <- glm(tested_pos_wo_mj ~ maternal_age + black_yn + white_yn + asian_yn + pi_yn + native_yn + ni_yn, data= fairlabs_data_tested_before, na.action = "na.exclude", family = binomial)
summary(m.glm_pos_wo_mj_before)

m.glm_pos_wo_mj_after <- glm(tested_pos_wo_mj ~ maternal_age + black_yn + white_yn + pi_yn + native_yn + other_yn, data= fairlabs_data_tested_after, na.action = "na.exclude", family = binomial)
summary(m.glm_pos_wo_mj_after)


#######################
        #reported + tested
#######################

                        ### glm did not converge?? (before)
# https://stackoverflow.com/questions/49656824/use-an-actionbutton-to-go-to-another-tab

m.glm_reported_before <- glm(reported ~ maternal_age + black_yn + white_yn + asian_yn + pi_yn + native_yn + ni_yn, data= fairlabs_data_tested_before, na.action = "na.exclude", family = binomial)
summary(m.glm_reported_before)

#why not converge?
b<- fairlabs_data_tested_before %>%
  filter(maternal_race == "American Indian or Alaska Native" | maternal_race == "Other Pacific Islander" | maternal_race == "Asian" | maternal_race == "Not Indicated")


m.glm_reported_after <- glm(reported ~ maternal_age + black_yn + white_yn + pi_yn + native_yn + other_yn, data= fairlabs_data_tested_after, na.action = "na.exclude", family = binomial)
summary(m.glm_reported_after)



#######################
        #reported + pos
#######################

                        ### glm did not converge?? (before)

m.glm_reported_pos_before <- glm(cps_w_pos ~ maternal_age + black_yn + white_yn + asian_yn + pi_yn + native_yn + ni_yn, data= fairlabs_data_tested_before, na.action = "na.exclude", family = binomial)
summary(m.glm_reported_pos_before)

m.glm_reported_pos_after <- glm(cps_w_pos ~ maternal_age + black_yn + white_yn + pi_yn + native_yn + other_yn, data= fairlabs_data_tested_after, na.action = "na.exclude", family = binomial)
summary(m.glm_reported_pos_after)


#######################
        #reported + pos_wo_mj
#######################

                        ### glm DIDNT converge

m.glm_reported_pos_wo_mj_before <- glm(cps_w_pos_wo_mj ~ maternal_age + black_yn + white_yn + asian_yn + pi_yn + native_yn + ni_yn, data= fairlabs_data_tested_before, na.action = "na.exclude", family = binomial)
summary(m.glm_reported_pos_wo_mj_before)

m.glm_reported_pos_wo_mj_after <- glm(cps_w_pos_wo_mj ~ maternal_age + black_yn + white_yn + pi_yn + native_yn + other_yn, data= fairlabs_data_tested_after, na.action = "na.exclude", family = binomial)
summary(m.glm_reported_pos_wo_mj_after)











#######################
        #indication? is this possible with multiple indications (not binary)
# https://bookdown.org/sarahwerth2024/CategoricalBook/multinomial-logit-regression-r.html

#######################

#m.glm_indication <- glm(order_indication ~ maternal_age + black_yn + white_yn + pi_yn + native_yn + other_yn, data= fairlabs_data_tested_after, na.action = "na.exclude", family = "multinomial")

m.mlm_indication <- multinom(order_indication ~ maternal_age + black_yn + white_yn + pi_yn + native_yn + other_yn, data= fairlabs_data_tested_after, na.action = "na.exclude")
summary(m.mlm_indication)


```

## Build ML Coef Tables (BEFORE / AFTER)

```{r}

#######################
        #Before
#######################


coef_table_before <- data.frame("term" = c("maternal_age", "black_yn1", 
                                   "white_yn1", "asian_yn1", "pi_yn1",
                                   "native_yn1","other_yn1", "ni_yn1"))

x_vars <- c("m.glm_tested_before", "m.glm_pos_before", "m.glm_pos_wo_mj_before", 
            "m.glm_reported_before", "m.glm_reported_pos_before", 
            "m.glm_reported_pos_wo_mj_before")

for (x_var in x_vars) {
  coef_data <- as.data.table(tidy(get(x_var))) %>%
    mutate(estimate = ifelse(p.value < 0.01, as.character(signif(estimate,2)), "Not Significant")) %>%
    select(term, estimate) %>%
    rename_at(vars(estimate), ~ x_var)
  coef_table_before <- merge(coef_table_before, coef_data, by = "term", all.x = TRUE)
}


coef_table_before <- coef_table_before %>%
  arrange(factor(term, levels = c("maternal_age", "black_yn1", 
                                   "white_yn1", "asian_yn1", "pi_yn1",
                                   "native_yn1","other_yn1", "ni_yn1"))) %>%
  mutate(term = ifelse(term == "asian_yn1", "Asian", term)) %>% 
  mutate(term = ifelse(term == "black_yn1", "Black or African American", term)) %>%
  mutate(term = ifelse(term == "native_yn1", "American Indian or Alaska Native", 
                       term)) %>%
  mutate(term = ifelse(term == "other_yn1","Multiracial/Other", term))%>%
  mutate(term = ifelse(term == "pi_yn1", "Other Pacific Islander", term)) %>%
  mutate(term = ifelse(term == "ni_yn1", "Not Indicated", term)) %>%
  mutate(term = ifelse(term == "white_yn1", "White", term)) %>%
  mutate(term = ifelse(term == "maternal_age", "Maternal Age", term)) %>%
  setnames(c("term", "m.glm_tested_before", "m.glm_pos_before", 
             "m.glm_pos_wo_mj_before", "m.glm_reported_before", 
             "m.glm_reported_pos_before", "m.glm_reported_pos_wo_mj_before"), 
           c("Features", "Tested", "Positive Result", 
             "Positive Result (excluding marijuana)", "Reported to CPS", 
             "Reported to CPS with Positive Result", 
             "Reported to CPS with Positive Result (excluding marijuana)"))

rownames(coef_table_before) <- coef_table_before$Features
coef_table_before$Features <- NULL


#######################
        #After
#######################

coef_table_after <- data.frame("term" = c("maternal_age", "black_yn1", 
                                   "white_yn1", "asian_yn1", "pi_yn1",
                                   "native_yn1","other_yn1", "ni_yn1"))

x_vars2 <- c("m.glm_tested_after", "m.glm_pos_after", "m.glm_pos_wo_mj_after", 
            "m.glm_reported_after", "m.glm_reported_pos_after", 
            "m.glm_reported_pos_wo_mj_after")

for (x_var in x_vars2) {
  coef_data <- as.data.table(tidy(get(x_var))) %>%
    mutate(estimate = ifelse(p.value < 0.01, as.character(signif(estimate,2)), "Not Significant")) %>%
    select(term, estimate) %>%
    rename_at(vars(estimate), ~ x_var)
  coef_table_after <- merge(coef_table_after, coef_data, by = "term", all.x = TRUE)
}

coef_table_after <- coef_table_after %>%
  arrange(factor(term, levels = c("maternal_age", "black_yn1", 
                                   "white_yn1", "asian_yn1", "pi_yn1",
                                   "native_yn1","other_yn1", "ni_yn1"))) %>%
  mutate(term = ifelse(term == "asian_yn1", "Asian", term)) %>% 
  mutate(term = ifelse(term == "black_yn1", "Black or African American", term)) %>%
  mutate(term = ifelse(term == "native_yn1", "American Indian or Alaska Native", 
                       term)) %>%
  mutate(term = ifelse(term == "other_yn1","Multiracial/Other", term))%>%
  mutate(term = ifelse(term == "pi_yn1", "Other Pacific Islander", term)) %>%
  mutate(term = ifelse(term == "ni_yn1", "Not Indicated", term)) %>%
  mutate(term = ifelse(term == "white_yn1", "White", term)) %>%
  mutate(term = ifelse(term == "maternal_age", "Maternal Age", term)) %>%
  setnames(c("term", "m.glm_tested_after", "m.glm_pos_after", 
             "m.glm_pos_wo_mj_after", "m.glm_reported_after", 
             "m.glm_reported_pos_after", "m.glm_reported_pos_wo_mj_after"), 
           c("Features", "Tested", "Positive Result", 
             "Positive Result (excluding marijuana)", "Reported to CPS", 
             "Reported to CPS with Positive Result", 
             "Reported to CPS with Positive Result (excluding marijuana)"))

rownames(coef_table_after) <- coef_table_after$Features
coef_table_after$Features <- NULL

```

## Over time - NEED TO CHANGE!

```{r}

month_count_race <- fairlabs_data %>%
  group_by(delivery_month, maternal_race) %>%
  rename(Demographic = maternal_race) %>%
  summarize(count = n(), 
            num_tested = sum(tested10, na.rm = TRUE), 
            pct_pts_tested = (num_tested/count)*100, 
            num_pos = sum(tested_pos == 1, na.rm = TRUE), 
            num_pos_wo_mj = sum(tested_pos_wo_mj == 1, na.rm = TRUE),
            pct_tests_pos = (num_pos/num_tested)*100, 
            pct_tests_pos_wo_mj = (num_pos_wo_mj/num_tested)*100, 
            num_reported = sum(tested10 == 1 & reported10 == 1, na.rm = TRUE), 
            pct_tests_rep = (num_reported / num_tested)*100,
            num_reported_pos = sum(tested_pos == 1 & reported10 == 1,na.rm = TRUE),
            pct_tests_rep_pos = (num_reported_pos / num_tested)*100,
            num_reported_pos_wo_mj = sum(tested_pos_wo_mj == 1 & reported10 == 1,
                                         na.rm = TRUE),
            pct_tests_rep_pos_wo_mj = (num_reported_pos_wo_mj / num_tested)*100) 

month_count_age <- fairlabs_data %>%
  group_by(delivery_month, maternal_decade) %>%
  rename(Demographic = maternal_decade) %>%
  summarize(count = n(), 
            num_tested = sum(tested10, na.rm = TRUE), 
            pct_pts_tested = (num_tested/count)*100, 
            num_pos = sum(tested_pos == 1, na.rm = TRUE), 
            num_pos_wo_mj = sum(tested_pos_wo_mj == 1, na.rm = TRUE),
            pct_tests_pos = (num_pos/num_tested)*100, 
            pct_tests_pos_wo_mj = (num_pos_wo_mj/num_tested)*100, 
            num_reported = sum(tested10 == 1 & reported10 == 1, na.rm = TRUE), 
            pct_tests_rep = (num_reported / num_tested)*100,
            num_reported_pos = sum(tested_pos == 1 & reported10 == 1,na.rm = TRUE),
            pct_tests_rep_pos = (num_reported_pos / num_tested)*100,
            num_reported_pos_wo_mj = sum(tested_pos_wo_mj == 1 & reported10 == 1,
                                         na.rm = TRUE),
            pct_tests_rep_pos_wo_mj = (num_reported_pos_wo_mj / num_tested)*100) 

month_count_overall <- fairlabs_data %>%
  group_by(delivery_month) %>%
  summarize(count = n(), 
            num_tested = sum(tested10, na.rm = TRUE), 
            pct_pts_tested = (num_tested/count)*100, 
            num_pos = sum(tested_pos == 1, na.rm = TRUE), 
            num_pos_wo_mj = sum(tested_pos_wo_mj == 1, na.rm = TRUE),
            pct_tests_pos = (num_pos/num_tested)*100, 
            pct_tests_pos_wo_mj = (num_pos_wo_mj/num_tested)*100, 
            num_reported = sum(tested10 == 1 & reported10 == 1, na.rm = TRUE), 
            pct_tests_rep = (num_reported / num_tested)*100,
            num_reported_pos = sum(tested_pos == 1 & reported10 == 1,na.rm = TRUE),
            pct_tests_rep_pos = (num_reported_pos / num_tested)*100,
            num_reported_pos_wo_mj = sum(tested_pos_wo_mj == 1 & reported10 == 1, 
                                         na.rm = TRUE),
            pct_tests_rep_pos_wo_mj =(num_reported_pos_wo_mj / num_tested)*100) %>%
  mutate(Demographic = "Overall")

month_count_combined <- rbind(month_count_age, month_count_race)
month_count_combined <- rbind(month_count_combined, month_count_overall)



```

## Maternal Race Analysis

```{r}
create_pie_chart <- function(data, x_var) {
  data %>%
    mutate(maternal_race = str_wrap(maternal_race, width = 20)) %>%
    group_by(maternal_race, {{ x_var }}) %>%
    summarize(count = n()) %>%
    group_by(maternal_race) %>%
    mutate(total = sum(count)) %>%
    ggplot(aes(x = "", y = count/total, fill = {{ x_var }})) +
    geom_bar(stat = "identity", width = 1) +
    coord_polar("y", start = 0) +
    facet_wrap(~maternal_race) +
    geom_text(aes(label = count), color = "white", size = 6, position = position_stack(vjust = 0.5)) +
    theme_void() +
    theme(legend.position = "right", 
          legend.text = element_text(size = 15), 
          legend.title = element_blank(), 
          strip.text = element_text(size = 10))
}
```

## Indications (practice)

```{r}


indication_plot <- gghistogram(fairlabs_data_tested %>% filter(BA_intervention == "After") %>% mutate(order_indication = str_wrap(order_indication, width = 20)), x = "order_indication", stat = "count", position = "stack", color = "maternal_race", fill = "maternal_race", xlab = "Order Indication", ylab = "Number of Patients")  %>% ggpar(x.text.angle = 45)

indication_plot


# Did those reported for substance use excluding mj actually tested positive? 
summary_ind <- fairlabs_data_tested %>% 
  filter(BA_intervention == "After") %>%
  filter(order_indication == "Substance use during pregnancy, excluding marijuana") %>%
  group_by(maternal_race) %>%
  summarize(cnt = length(maternal_race), pos = sum(tested_pos), pos_wo_mj = sum(tested_pos_wo_mj))


# Did those reported for no prenatal care have higher positive rates than those without "no prenatal care" indication?
# need to look at those NOT drug tesed (before intervention) bc we don't know if that was the reason for testing, and combine with everyone after intervention w/o that indication? or exclude ????????
#come back to this 

fairlabs_data_tested_new <- fairlabs_data_tested %>%
  mutate(ind_NoPreCare = ifelse(order_indication != "No prenatal care", 0, 1))

ind_sum_2 <- fairlabs_data_tested_new %>%
  group_by(maternal_race) %>%
  summarize(cnt = length(maternal_race), NPC = sum(ind_NoPreCare), pct = NPC/cnt)
#only black, multi, white 

# does this indication affect + test?
#m.glm_pos2 <- glm(tested_pos ~ maternal_age + as.factor(black_yn) + as.factor(white_yn) + as.factor(asian_yn) + as.factor(pi_yn) + as.factor(native_yn) + as.factor(other_yn) + as.factor(ni_yn) + as.factor(ind_NoPreCare), data= fairlabs_data_tested_new, na.action = "na.exclude", family = binomial)
#summary(m.glm_pos2)
#what percent of mothers don't get prenatal care? is this proportional?
#same with unexplained abruption of placenal, unexxplained late fetal demise, etc


#each indication by whether they tested positive or reported ?





```

## Dashboard ERIN

```{r}



######################################
# making a layout: https://shiny.posit.co/r/articles/build/layout-guide/
# https://stackoverflow.com/questions/49656824/use-an-actionbutton-to-go-to-another-tab 
# https://rstudio.github.io/shiny/reference/tabsetPanel.html
#https://www.r-bloggers.com/2022/10/shiny-application-layouts-are-changing/ 
#https://shiny.posit.co/py/layouts/ 
#https://shiny.posit.co/r/articles/build/layout-guide/ 

ui <- page_fluid(
  
  br(),
  h1("Peripartum Urine Drug Screening Analytics"),
  h5("Navigation"),
  "Browse the tabs below to investigate equity metrics:",
  br(),
  "Demographic Parity - patients should be tested at rates equivalent to their representation in overall population?",
  br(), 
  "Equalized Odds - sensitivity and specificity should be the same across groups?",
  br(), 
  "Predictive Parity - positive and negative predictive values should be the same across groups?",
  br(), 
  "Equal Outcomes - ?",
  br(), 
  br(),
  
  
  tabsetPanel(
      tabPanel(h5("Time Series Analysis"),
               layout_sidebar(
                 sidebar = sidebar(
                   h6("Time Series Analysis"),
                   "The graphs here ... intervention is in black ... need accurate titles for graphs",
                   br(),
                   br(),
                   checkboxGroupInput(inputId = "checkGroup", 
                                   label = h6("Select the demographics displayed in the graphs"), 
                                   choices =
                                     list("Overall" = 'Overall',
                                          "White" = 'White',
                                          "Asian" = 'Asian',
                                          "Black or African American" = 
                                            'Black or African American',
                                          "American Indian or Alaska Native" =
                                            'American Indian or Alaska Native',
                                          "Multiracial/Other"= 'Multiracial/Other',
                                          "Not Indicated" = 'Not Indicated',
                                          "Other Pacific Islander" = 
                                            'Other Pacific Islander',
                                          "10-20 years old" = '10-20 years old',
                                          "20-30 years old" = '20-30 years old',
                                          "30-40 years old" = '30-40 years old',
                                          "40-50 years old" = '40-50 years old'),
                                   selected = 'Overall'), 
                   br(),
                   radioButtons(inputId = "radio_trendline", 
                                label = h6("Data Visualization"),
                           choices= c("Raw Data", "Raw Data and Trendline",
                                      "Trendline"),
                           selected = "Raw Data")
                   ),
                 
                 layout_columns(
                  card("% of Patients Tested",
                       plotOutput(outputId = "tested_plot")),
                  card("% of Tests Reported",
                       plotOutput("reported_plot"))
                  #row_heights = c(0.8, 0.8)
                  ), 
                layout_columns(
                  card("% of Tests with Positive Results", 
                       plotOutput("positive_plot")), 
                  card("% of Reported Tests Which Had Positive Results", 
                       plotOutput("reported_pos_plot"))), 
                layout_columns(
                  card("% of Tests with Positive Results (excluding marijuana)",
                       plotOutput("positive_wo_mj_plot")), 
                  card("% of Reported Tests Which Had Positive Results (excluding marijuana)",
                       plotOutput("reported_pos_wo_mj_plot")))
               )

      ), 
      tabPanel(h5("Correlation Analysis"), 
               br(),
               h4("Correlation Analysis"), 
               br(),
               layout_sidebar(
                 sidebar = sidebar(
                   radioButtons(inputId = "radio_coef", 
                                label = h6("Select Analysis:"),
                           choices= c("Before Intervention", "After Intervention"),
                           selected = "Before Intervention")),
                 layout_columns(
                   div(dataTableOutput("c_table"), style = "font-size:90%"),
                   div(plotOutput(outputId = "pie_chart"), style = "font-size:2000%"), 
                   col_widths = c(8,4))), 
                 br(),
               h5("This table was constructed using logistic regression models to identify statistically significant relationships between the predictor variables (rows) and each outcome variable (column). \n Values which are not statistically significant are hidden."), 
               br(), 
               
              "The tested column should be compared to the outcomes in the following columns. If testing does not reflect the trends seen in the outcomes, testing may be biased. For example, if Black or African American mothers have a significant correlation to being tested, but is not correlated with higher positivity rates, the Black or African demographic may be over-tested"), 
      tabPanel(h5("Indication Analysis"),
               br(),
               h4("Indication Analysis"),
               br(),
               layout_columns(
                 card("Indications by Maternal Race", 
                    plotOutput(outputId = "indication_chart")),
                 card("Dataframe"), 
                 card("National Data"), 
                 col_widths = c(-2,8,-2,6,6)))
      
      
      
      ) #tabsetpanel layout
  
) #pagefillable


  


######################################
# https://forum.posit.co/t/create-a-shiny-app-to-filter-rows-and-columns-simultaneously-from-a-genetic-distance-matrix/156605/2
#need help with reactivity 


server <- function(input, output) {
  
  output$tested_plot <- renderPlot({
    month_count_combined_filtered <- month_count_combined %>% 
      filter(Demographic %in% input$checkGroup)
    ggplot(data = month_count_combined_filtered, 
           aes(x=delivery_month, y=pct_pts_tested, color = Demographic)) +
      geom_vline(aes(xintercept = as.Date("2028-02-27")), color="black") +
      labs(x = "Date", y = "% Tested") + 
      theme_minimal() +
      ylim(min(month_count_combined_filtered$pct_pts_tested, na.rm = TRUE), 
           max(month_count_combined_filtered$pct_pts_tested, na.rm = TRUE)) +
      {if(input$radio_trendline == "Raw Data" | input$radio_trendline == 
          "Raw Data and Trendline")geom_line(stat = "identity")} +
      {if(input$radio_trendline == "Raw Data and Trendline" | 
        input$radio_trendline == "Trendline")geom_smooth(se = FALSE)}
        })
  
  output$positive_plot <- renderPlot({
    month_count_combined_filtered <- month_count_combined %>% 
      filter(Demographic %in% input$checkGroup)
    ggplot(data = month_count_combined_filtered, 
           aes(x=delivery_month, y=pct_tests_pos, color = Demographic)) +
      geom_vline(aes(xintercept = as.Date("2028-02-27")), color="black") +
      labs(x = "Date", 
           y = "% Positive") + 
      theme_minimal() +
      ylim(min(month_count_combined_filtered$pct_tests_pos, na.rm = TRUE), 
           max(month_count_combined_filtered$pct_tests_pos, na.rm = TRUE)) +
      {if(input$radio_trendline == "Raw Data" | input$radio_trendline == 
          "Raw Data and Trendline")geom_line(stat = "identity")} +
      {if(input$radio_trendline == "Raw Data and Trendline" | 
        input$radio_trendline == "Trendline")geom_smooth(se = FALSE)} 
    })
  
  output$positive_wo_mj_plot <- renderPlot({
    month_count_combined_filtered <- month_count_combined %>% 
      filter(Demographic %in% input$checkGroup)
    ggplot(data = month_count_combined_filtered, 
           aes(x=delivery_month, y=pct_tests_pos_wo_mj, color = Demographic)) +
      geom_vline(aes(xintercept = as.Date("2028-02-27")), color="black") +
      labs(x = "Date", 
           y = "% Positive (excluding MJ)") + 
      theme_minimal() +
      ylim(min(month_count_combined_filtered$pct_tests_pos_wo_mj, na.rm = TRUE), 
           max(month_count_combined_filtered$pct_tests_pos_wo_mj, na.rm = TRUE)) +
      {if(input$radio_trendline == "Raw Data" | input$radio_trendline == 
          "Raw Data and Trendline")geom_line(stat = "identity")} +
      {if(input$radio_trendline == "Raw Data and Trendline" | 
        input$radio_trendline == "Trendline")geom_smooth(se = FALSE)}
    })
    
  output$reported_plot <- renderPlot({
    month_count_combined_filtered <- month_count_combined %>% 
      filter(Demographic %in% input$checkGroup)
    ggplot(data = month_count_combined_filtered, 
           aes(x=delivery_month, y=pct_tests_rep, color = Demographic)) +
      geom_vline(aes(xintercept = as.Date("2028-02-27")), color="black") +
      labs(x = "Date", 
           y = "% Reported") + 
      theme_minimal() +
      ylim(min(month_count_combined_filtered$pct_tests_rep, na.rm = TRUE), 
           max(month_count_combined_filtered$pct_tests_rep, na.rm = TRUE)) +
      {if(input$radio_trendline == "Raw Data" | input$radio_trendline == 
          "Raw Data and Trendline")geom_line(stat = "identity")} +
      {if(input$radio_trendline == "Raw Data and Trendline" | 
        input$radio_trendline == "Trendline")geom_smooth(se = FALSE)}
    })
  
  output$reported_pos_plot <- renderPlot({
    month_count_combined_filtered <- month_count_combined %>% 
      filter(Demographic %in% input$checkGroup)
    ggplot(data = month_count_combined_filtered, 
           aes(x=delivery_month, y=pct_tests_rep_pos, color = Demographic)) +
      geom_vline(aes(xintercept = as.Date("2028-02-27")), color="black") +
      labs(x = "Date", 
           y = "% Reported Positive") + 
      theme_minimal() +
      ylim(min(month_count_combined_filtered$pct_tests_rep_pos, na.rm = TRUE), 
           max(month_count_combined_filtered$pct_tests_rep_pos, na.rm = TRUE)) +
      {if(input$radio_trendline == "Raw Data" | input$radio_trendline == 
          "Raw Data and Trendline")geom_line(stat = "identity")} +
      {if(input$radio_trendline == "Raw Data and Trendline" | 
        input$radio_trendline == "Trendline")geom_smooth(se = FALSE)}
    })
  
  output$reported_pos_wo_mj_plot <- renderPlot({
    month_count_combined_filtered <- month_count_combined %>% 
      filter(Demographic %in% input$checkGroup)
    ggplot(data = month_count_combined_filtered, 
           aes(x=delivery_month, y=pct_tests_rep_pos_wo_mj, color = Demographic)) +
      geom_vline(aes(xintercept = as.Date("2028-02-27")), color="black") +
      labs(x = "Date", 
           y = "% Reported Pos (excluding MJ)") + 
      theme_minimal() +
      ylim(min(month_count_combined_filtered$pct_tests_rep_pos_wo_mj,na.rm = TRUE),
           max(month_count_combined_filtered$pct_tests_rep_pos_wo_mj,na.rm = TRUE)) +
      {if(input$radio_trendline == "Raw Data" | input$radio_trendline == 
          "Raw Data and Trendline")geom_line(stat = "identity")} +
      {if(input$radio_trendline == "Raw Data and Trendline" | 
        input$radio_trendline == "Trendline")geom_smooth(se = FALSE)}
    })
  
  ############# page 2
  
    # Render table
  output$c_table <- renderDT({
    if (input$radio_coef == "Before Intervention") {
      datatable(coef_table_before, selection = 'none', 
              options = list(paging = FALSE, searching = FALSE, 
                             ordering=FALSE,info = FALSE))
    } else if (input$radio_coef == "After Intervention") {
      datatable(coef_table_after, selection = 'none', 
              options = list(paging = FALSE, searching = FALSE, 
                             ordering=FALSE,info = FALSE))
    }
  })
  
  output$pie_chart <- renderPlot({
    if (input$radio_coef == "Before Intervention") {
      create_pie_chart(fairlabs_data_before, tested)
    } else if (input$radio_coef == "After Intervention") {
      create_pie_chart(fairlabs_data_after, tested)
    }
  })
  
  ##################### page 3
  
  output$indication_chart <- renderPlot({
    gghistogram(fairlabs_data_tested %>% filter(BA_intervention == "After") %>% mutate(order_indication = str_wrap(order_indication, width = 20)), x = "order_indication", stat = "count", position = "stack", color = "maternal_race", fill = "maternal_race", xlab = "Order Indication", ylab = "Number of Patients")  %>% ggpar(x.text.angle = 45, legend = "right")
  })

}


# Run the application
shinyApp(ui = ui, server = server)
```

## 

```{r}


```
